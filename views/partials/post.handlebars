{{! Partial for a single post }}
<div class="post" id="post{{this.id}}">
    <div class="post-avatar">
        <!-- the user's avatar -->
        <img src="{{#if user.avatar_url}}
                        {{user.avatar_url}}
                    {{else}}
                        /avatar/{{this.username}}
                    {{/if}}" 
                    alt="User Avatar" 
                    class="header-avatar">
    </div>
    <div class="post-content preserve-newlines">
        <!-- the post -->
        <h3 class="post-title">{{this.title}}</h3>
        <p class="post-text">{{this.content}}</p>
        <hr>
        <div class="post-status-bar">
            <!-- everything that is shown in the status bar -->
            <!-- Heart = â™¥ -->
            <!-- font awesome  trashcan = <i class="fas fa-trash-alt"> </i>-->
            {{#ifCond this.username user.username}}
                <button data-id="{{this.id}}" class="delete-button" onclick="handleDeleteClick(event)"><i class="fas fa-trash-alt"></i></button>
            {{else}}
                <button data-id="{{this.id}}" class="like-button" onclick="handleLikeClick(event)"><i class="fa-solid fa-thumbs-up"></i></i></button>
                <button data-id="{{this.id}}" class="dislike-button" onclick="handleDislikeClick(event)"><i class="fa-solid fa-thumbs-down"></i></button>
            {{/ifCond}}
            <p class="like-count">{{this.likes}} Likes</p>
            <p>Posted by {{this.username}} on {{this.timestamp}}</p>
        </div>        
    </div>
    <div id="edit-container" style="display: none;">
        <form id="edit-post-form">
            <label for="title">Title:</label>
            <input type="text" id="title" name="title" autocomplete="off" required>
            <label for="content">Content:</label>
            <textarea id="content" name="content" autocomplete="off" required></textarea>
            <button type="submit">Save</button>
        </form>
    </div>
</div>
<script>

    function handleLikeClick(event) {
        const buttonElement = event.target.closest('.like-button');
        const postId = buttonElement.getAttribute('data-id');  

        // you might want to "fetch" something...      
        fetch(`/like/${postId}`, {
            method: 'POST'
        })
        .then(statusCheck)
        .then(res => res.likes)
        .then(res => updateLikeCount(res, postId))
        .catch(error => console.error(error));
    }

    function handleDislikeClick(event) {
        const buttonElement = event.target.closest('.dislike-button');
        const postId = buttonElement.getAttribute('data-id');    

        console.log(postId);

        // you might want to "fetch" something...      
        fetch(`/dislike/${postId}`, {
            method: 'POST'
        })
        .then(statusCheck)
        .then(res => res.likes)
        .then(res => updateLikeCount(res, postId))
        .catch(error => console.error(error));
    }

    function handleDeleteClick(event) {
        const buttonElement = event.target.closest('.delete-button');
        const postId = buttonElement.getAttribute('data-id');        

        // you might want to "fetch" something... 
        fetch(`/delete/${postId}`, {
            method: 'POST'
        })
        .then(statusCheck)
        .then(res => processData(res, postId))
        .catch(error => console.error(error));

        location.reload();
    }    

    function updateLikeCount(res, postId) {
        let post = document.getElementById(`post${postId}`);
        if (!post) {
            throw new Error('Post not found')
        }

        let likeCountElement = post.querySelector('.like-count');
        if (!likeCountElement) {
            throw new Error('Like count element not found')
        }

        likeCountElement.innerText = `${res} Likes`;
    }

    function statusCheck(res) {
    if (!res.ok) {
        throw new Error('Failed to fetch: ' + res.statusText);
    }
    return res.json();  // Assuming the response is in JSON format
    }

    function removePostFromDOM(postId) {
        const post = document.getElementById(`post${postId}`);
        if (post) {
            post.remove();
        } else {
            throw new error('Post not found');
        }
    }

    function processData(res, postId) {
        if(res.success) {
            removePostFromDOM(postId);
        } else {
            throw new error('Failed to delete post. Try again later.');
        }
    }

</script>