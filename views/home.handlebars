{{! Use the main layout }}
{{!< main }}

{{! New Post Submission Form }}
<section class="content-container">
    {{#if loggedIn}}
        <!-- show the create post form when logged in -->
        <section class="post-form">
            <!-- make a header here -->
            <h2>Create a new Yap</h2>
            <form action="/posts" method="POST" id="post-submit-form">
                <!-- title input field name = "title" -->
                <!-- text area input field name = "content" -->
                <input type="hidden" name="username" value="{{user.username}}">
                <input type="text" id="title" name="title" placeholder="Title" autocomplete="off" required>
                <textarea id="content" name="content" placeholder="What's on your mind {{user.username}}?" autocomplete="off" style="white-space: normal;" required></textarea>
                <div class="form-actions">
                    <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
                    <button type="submit" class="post-button">{{postNeoType}} (Post)</button>
                </div>
            </form>

            <div id="emoji-container" class="emoji-panel" style="display: none;">
                <!-- input field for the emoji search, use oninput="searchEmojis() -->
                <!-- a div, id = "emoji-grid" -->
                <input type="text" id="emoji-search" name="emoji-searchbar" placeholder="Search for an emoji" autocomplete="off" oninput="searchEmojis()">
                <div id="emoji-grid"></div>
            </div>
        </section>
    {{/if}}

    <section class="posts-list">
        <!-- recent posts -->
        <h2>Recent {{postNeoType}}s</h2>
        <form action="/sort" method="POST" id="sort-form">
            <label for="sort-options">Sort By:</label>
            <select name="sort-options" id="sort-options">
                <option value="time-desc">Newest</option>
                <option value="time-asc">Oldest</option>
                <option value="title-asc">Alphabetical Case Sensitive (A-Z)</option>
                <option value="title-desc">Reverse Alphabetical Case Sensitive (Z-A)</option>
                <option value="likes-desc">Most Popular</option>
                <option value="likes-asc">Least Popular</option>
            </select>
            <button type="submit">Sort</button>
        </form>
        {{#if posts.length}}
        <ul>
            {{#each posts}}
                <!-- you have to pass the user in to posts and this is the syntax -->
                {{> post this user=../user}}            
            {{/each}}
        </ul>
        {{else}}
            <!-- no posts, oh no, what now? -->
            <p>No posts. Time to get posting!</p>
        {{/if}}
    </section>
</section>


{{! JavaScript for Emoji Integration }}
<script>
/*
 You want to show a subset of the emojis. About 200. However,
 you also want the user to be able to search all emojis,
 so, put them in this array when the array is empty so 
 that you have them.
*/

let allEmojis = [];  // Global list to hold all emojis

async function toggleEmojiPanel() {
    const container = document.getElementById('emoji-container');
    container.style.display = container.style.display === 'none' ? 'block' : 'none';


    if(container.style.display === 'block' && allEmojis.length == 0){
        // go "Fetch" you some emojis and show them off with displayEmojies
        try{
            let res = await fetch('/emojis');
            if (!res.ok) {
                throw new error('Error fetching emojis');
            }
            allEmojis = await res.json();
            displayEmojis(allEmojis);
        } catch (error) {
            console.error(error);
        }
    }
}

function displayEmojis(emojis,limit=200) {
    const container = document.getElementById('emoji-grid');
    container.innerHTML = '';  // Clear previous results
    if (Array.isArray(emojis) && emojis.length > 0) {
        emojis.slice(0, limit).forEach(emoji => {
            const emojiElement = document.createElement('span');
            emojiElement.textContent = emoji.character;
            emojiElement.title = emoji.slug;  // Showing the emoji name on hover
            emojiElement.style.cursor = 'pointer';
            emojiElement.onclick = () => insertEmoji(emoji.character);
            container.appendChild(emojiElement);
        });
    } else {
        container.textContent = 'No emojis found. Try a different search!';
    }
}

function searchEmojis() {
    const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
    // array.filter takes a predicate
    // use string.includes. 

    const filteredEmojis = allEmojis.filter(emoji => emoji.unicodeName.includes(searchTerm));
    
    displayEmojis(filteredEmojis);
}

function insertEmoji(emoji) {
    // put an emoji on a form somehow. 
    let textarea = document.getElementById('content');

    // do this when you're doing getting the emoji on the form
    //
    textarea.focus();  // Keep focus on the textarea
    textarea.value += emoji;
}
</script>